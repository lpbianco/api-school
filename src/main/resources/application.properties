
server.servlet.context-path=/school-api
server.api.version=/v1

## H2 DATA BASE
spring.datasource.url=jdbc:h2:mem:schooldb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.defer-datasource-initialization=true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql=false


##MESSAGES##

school.error = Unexpected error
school.create = Criar uma nova escola
school.create.info = Operacao destinada ao registro ou criacao de novas escolas
school.find.id=Obter escola por id
school.find.id.info=Encontre uma escola a partir de seu id
school.find.id.parameter=Identificador unico da escola
school.update.id=Atualizar escola por id
school.update.id.info=A partir da chave e possivel atualizar o item desejado
school.update.id.parameter=Identificador unico da escola
school.delete.id=Deletar entidade por id
school.delete.id.info=Operacao utilizada para deletar, logicamente ou nao, uma entidade
school.delete.id.parameter.id=Parametro utilizado para informar o identificador unico da entidade a ser deletada
school.delete.id.parameter.softDelete=Parametro opcional utilizado para indicar se o registro deve ou nao ser deletado logicamente
school.delete.sucess=Sucess

school.findall.msg=Listagem de escolas
school.findall.info=Retorna uma lista de escolas paginada, podendo ela estar ou nao filtrada
school.findall.parameter.page=Parametro utilizado para indicar a pagina desejada, tomando como valor inicial o numero ZERO
school.findall.parameter.pageSize=Parametro utilizado para indicar a quantidade de elementos a serem retornados numa unica pesquisa, tendo como limite superior o numero CINQUENTA
school.findall.parameter.search=Parametro opcional utilizado para filtrar os resultados a serem retornados, baseando-se nos criterios descritos abaixo
